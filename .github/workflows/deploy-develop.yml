name: Deploy master hoho
on:
  push:
    branches:
      - master

env:
  PROJECT_NAME: ${{ secrets.PROJECT_NAME }}
  PROJECT_PATH: ${{ secrets.PROJECT_PATH }}
jobs:
  build-and-run:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    strategy:
      matrix:
        node-version: [14.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install npm lock@v2
      run: wget -O - https://www.npmjs.com/install.sh | bash
    - name: Install depends
      run: npm install
    - name: Setup env
      run: echo "$ENV_DEV" > .env
      env:
        ENV_DEV: ${{ secrets.ENV_DEV }}
    - name: Build
      run: CI=false npm run build
    - name: Zip build
      uses: montudor/action-zip@v0.1.0
      with: 
        args: "zip -r build.zip .build"
    - name: Configure SSH
      run: |
        mkdir -p ~/.ssh/
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/dev.key
        chmod 600 ~/.ssh/dev.key
        cat >>~/.ssh/config <<END
        Host dev
          HostName $SSH_HOST
          User $SSH_USER
          IdentityFile ~/.ssh/dev.key
          StrictHostKeyChecking no
        END
      env:
        SSH_USER: ${{ secrets.SSH_USER }}
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        SSH_HOST: ${{ secrets.SSH_HOST_DEV }}
    - name: Scp server
      run: scp -F ~/.ssh/config build.zip dev:/tmp
    - name: Unzip
      run: ssh dev "rm -rf $PROJECT_PATH/$PROJECT_NAME/.next && unzip -o /tmp/build.zip -d $PROJECT_PATH/$PROJECT_NAME"
    - name: Deploy
      run: ssh dev "cd $PROJECT_PATH && ./deploy.static.sh"
    - name: Clean cache build
      run: ssh dev "rm -rf /tmp/build.zip"
    - uses: actions/cache@v2
      with:
        path: |
          ~/.npm
          ${{ github.workspace }}/.next/cache
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
